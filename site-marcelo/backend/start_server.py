#!/usr/bin/env python3
"""
Script para iniciar o servidor do backend facilmente
Instala depend√™ncias automaticamente se necess√°rio
"""

import subprocess
import sys
import os

def install_dependencies():
    """Instala as depend√™ncias necess√°rias"""
    dependencies = [
        'flask',
        'flask-cors',
        'hashlib'
    ]
    
    print("üîß Instalando depend√™ncias...")
    for dep in dependencies:
        try:
            subprocess.check_call([sys.executable, '-m', 'pip', 'install', dep])
            print(f"‚úÖ {dep} instalado com sucesso")
        except subprocess.CalledProcessError:
            print(f"‚ùå Erro ao instalar {dep}")
        except Exception as e:
            print(f"‚ùå Erro: {e}")

def create_test_user():
    """Cria um usu√°rio de teste no banco"""
    import sqlite3
    import hashlib
    
    print("üë§ Criando usu√°rio de teste...")
    
    try:
        # Conecta ao banco
        conn = sqlite3.connect('imoveis.db')
        cursor = conn.cursor()
        
        # Cria as tabelas se n√£o existirem
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS usuarios(
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username TEXT NOT NULL UNIQUE,
                email TEXT NOT NULL UNIQUE,
                senha TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
        ''')
        
        # Verifica se j√° existe o usu√°rio admin
        cursor.execute('SELECT username FROM usuarios WHERE username = ?', ('admin',))
        if cursor.fetchone():
            print("‚úÖ Usu√°rio admin j√° existe")
        else:
            # Cria usu√°rio admin
            senha_hash = hashlib.sha256('admin123'.encode()).hexdigest()
            cursor.execute('''
                INSERT INTO usuarios (username, email, senha) 
                VALUES (?, ?, ?)
            ''', ('admin', 'admin@localhost.com', senha_hash))
            print("‚úÖ Usu√°rio admin criado: admin/admin123")
        
        # Verifica se j√° existe o usu√°rio marcelo
        cursor.execute('SELECT username FROM usuarios WHERE username = ?', ('marcelo',))
        if cursor.fetchone():
            print("‚úÖ Usu√°rio marcelo j√° existe")
        else:
            # Cria usu√°rio marcelo
            senha_hash = hashlib.sha256('marcelo123'.encode()).hexdigest()
            cursor.execute('''
                INSERT INTO usuarios (username, email, senha) 
                VALUES (?, ?, ?)
            ''', ('marcelo', 'marcelo@localhost.com', senha_hash))
            print("‚úÖ Usu√°rio marcelo criado: marcelo/marcelo123")
        
        conn.commit()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå Erro ao criar usu√°rio: {e}")

def start_server():
    """Inicia o servidor Flask"""
    print("üöÄ Iniciando servidor...")
    print("üìç Servidor rodar√° em: http://localhost:5001")
    print("üîë Credenciais de teste:")
    print("   üë§ admin / admin123")
    print("   üë§ marcelo / marcelo123")
    print("\n‚èπÔ∏è Para parar o servidor, pressione Ctrl+C")
    print("-" * 50)
    
    try:
        # Inicia o servidor Flask
        os.system('python properties_api.py')
    except KeyboardInterrupt:
        print("\nüõë Servidor parado.")
    except Exception as e:
        print(f"‚ùå Erro ao iniciar servidor: {e}")

if __name__ == "__main__":
    print("=" * 50)
    print("üè† MARCELO IM√ìVEIS - BACKEND SERVER")
    print("=" * 50)
    
    # Instala depend√™ncias
    install_dependencies()
    
    # Cria usu√°rio de teste
    create_test_user()
    
    # Inicia servidor
    start_server()
